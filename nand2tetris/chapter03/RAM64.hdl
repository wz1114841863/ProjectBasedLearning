// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    //// Replace this comment with your code.
    DMux8Way(in=load, sel=address[3..5], a=sel1, b= sel2, c=sel3, d=sel4, e=sel5, f=sel6, g=sel7, h=sel8);

    RAM8(in=in, load=sel1, address=address[0..2], out=out1);
    RAM8(in=in, load=sel2, address=address[0..2], out=out2);
    RAM8(in=in, load=sel3, address=address[0..2], out=out3);
    RAM8(in=in, load=sel4, address=address[0..2], out=out4);
    RAM8(in=in, load=sel5, address=address[0..2], out=out5);
    RAM8(in=in, load=sel6, address=address[0..2], out=out6);
    RAM8(in=in, load=sel7, address=address[0..2], out=out7);
    RAM8(in=in, load=sel8, address=address[0..2], out=out8);
    Mux8Way16(a=out1, b=out2, c=out3, d=out4, e=out5, f=out6, g=out7, h=out8, sel=address[3..5], out=out);
}